{"version":3,"sources":["components/FindInput/styles.module.css","components/Form/index.jsx","components/ContactList/index.jsx","components/FindInput/index.jsx","App.js","index.js","components/Form/styles.module.css","components/ContactList/styles.module.css"],"names":["module","exports","INITIAL_STATE","name","number","Form","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","form","this","input","type","pattern","title","required","onChange","tel","button","Component","ContactList","list","contacts","map","id","item","text","onClick","defaultProps","FindInput","filter","App","filterHendler","formSubmitHandler","some","elem","window","alert","prevState","uuidv4","deleteButtonHandler","newArr","target","JSON","parse","localStorage","getItem","setItem","stringify","toLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.698f19a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"styles_filter__1UWsc\",\"title\":\"styles_title__2f8Sc\"};","import { Component } from \"react\";\r\nimport { form, name, input, tel, button } from \"./styles.module.css\";\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState(() => {\r\n      return { ...INITIAL_STATE };\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={form} onSubmit={this.handleSubmit}>\r\n        <label className={name}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            // autocomplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={name}>\r\n          📞\r\n          <input\r\n            className={tel}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={button} type=\"submit\">\r\n          Add to contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { list, item, text, button } from \"./styles.module.css\";\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className={list}>\r\n        {this.props.contacts.map(({ id, name, number }) => (\r\n          <li className={item} key={id}>\r\n            <span className={text}>{name}:</span>\r\n            <span className={text}>{number}</span>\r\n            <button\r\n              className={button}\r\n              id={id}\r\n              type=\"button\"\r\n              onClick={this.props.onClick}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.defaultProps = {\r\n  contacts: [],\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import { Component } from \"react\";\r\nimport { filter, title } from \"./styles.module.css\";\r\n\r\nclass FindInput extends Component {\r\n  state = {\r\n    filter: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value }, () => this.props.onChange(this.state));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <label className={title}>\r\n        Find contacts by name:\r\n        <input\r\n          className={filter}\r\n          // autocomplete=\"off\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={this.state.filter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleChange}\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FindInput;\r\n","import { Component } from \"react\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport FindInput from \"./components/FindInput\";\nimport \"./styles.css\";\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    // console.log(contacts === null);\n    if (contacts !== null) {\n      // console.log(contacts);\n      this.setState({ contacts: [...contacts] });\n    }\n  }\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      // console.log(this.state.contacts === prevState.contacts);\n      // console.log(prevState.contacts);\n      // console.log(this.state.contacts);\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  filterHendler = ({ filter }) => {\n    this.setState({ filter: filter });\n  };\n  formSubmitHandler = ({ name, number }) => {\n    if (this.state.contacts.some((elem) => elem.name === name)) {\n      // console.log(\n      //   this.state.contacts.some((elem) => elem.name === name)\n      // );\n      window.alert(`${name} is already in contacts`);\n      return;\n    }\n    this.setState((prevState) => {\n      return {\n        contacts: [\n          { id: uuidv4(), name: name, number: number },\n          ...prevState.contacts,\n        ],\n      };\n    });\n  };\n\n  deleteButtonHandler = (event) => {\n    // console.log(event);\n    const newArr = this.state.contacts.filter(\n      (elem) => elem.id !== event.target.id\n    );\n    this.setState({ contacts: [...newArr] });\n  };\n\n  render() {\n    const filter = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter);\n    });\n    return (\n      <div className=\"container\">\n        <h1 className=\"main_title\">Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <h2 className=\"sub_title\">Contacts</h2>\n        <FindInput onChange={this.filterHendler} />\n        <ContactList\n          onClick={this.deleteButtonHandler}\n          contacts={filteredContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__3QcTT\",\"name\":\"styles_name__3bITx\",\"input\":\"styles_input__1E61I\",\"tel\":\"styles_tel__bDJrd\",\"button\":\"styles_button__rPMbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__2d0_8\",\"item\":\"styles_item__1Ihwl\",\"text\":\"styles_text__2OKDo\",\"button\":\"styles_button__6YhJz\"};"],"sourceRoot":""}